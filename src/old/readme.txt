COLOBOT version 1.4 /f
----------------------

COLOBOT est un mélange d'un jeu de stratégie en temps réel et
d'une initiation à la programmation. Le scénario vous place à
la tête d'une expédition spatiale, composée d'un seul humain
(vous) et de quelques robots. Vous devrez explorer et coloniser
différentes planètes, tout en cherchant des matières premières
nécessaires à votre survie.

Petit à petit, vous pourrez construire et programmer de nouveaux
robots, qui vous aideront dans vos tâches. Certaines planètes
sont habitées par des créatures primitives et hostiles qu'il
vous faudra combattre.


Configuration minimale
----------------------

Processeur 300 MHz
64 Mb RAM
Carte graphique 3D avec 16 Mb RAM
100 Mb d'espace libre sur le disque dur

Si ce n'est pas déjà fait, DirectX 8a est installé.
La présence du CD est nécessaire pour jouer.


Missions
--------

Les missions contiennent la partie "aventure" de COLOBOT. Elles
sont au nombre de 36, réparties sur 9 planètes différentes.
Elles doivent être faites dans l'ordre imposé.

Jeu libre
---------

Le mode "jeu libre" vous permet d'agir librement sur une
planète, sans but déterminé. Seuls les planètes déjà visitées et
les recherches effectuées sont disponibles.

Programmation
-------------

Cette partie de COLOBOT permet d'apprendre à programmer, même si
vous n'avez aucune notion dans ce domaine. Différents chapitres
présentent des sujets de plus en plus compliqués. Vous pouvez
effectuer n'importe quel exercice, bien qu'il soit conseillé de
commencer par les plus simples.

Défis
-----

Les défis vous demandent une bonne connaissance de la
programmation. Ils permettent de vérifier si les notions
apprises sous "programmation" sont effectivement comprises.


Autre joueur
------------

Après avoir installé COLOBOT sur un ordinateur, plusieurs
personnes peuvent y jouer. Pour chaque joueur, COLOBOT
enregistre automatiquement la progression dans les missions,
les programmes écrits, etc.


Options
-------

Réglages du jeu, répartis dans 5 pages.


Options - Affichage
-------------------

- Pilotes
Il faut choisir un pilote qui porte la mention HAL (Hardware
Abstraction Layer). Evitez les pilotes ayant la mention
"Emulation" ou "T&L". Il arrive fréquemment que des pilotes
avec des noms différents aient des comportements identiques.

- Résolutions
Les premier et deuxième chiffres indiquent le nombre de pixels
en largeur et en hauteur dans l'écran. Le troisième chiffre
indique le nombre de couleurs affichables (16 pour 65'000
couleurs et 32 pour 4 millions de couleurs).
Plus la résolution est grande et plus le jeu est beau.
Mais il risque de devenir lent. Commencez par mettre
640 x 480 x 16. La plupart des cartes graphiques modernes
supportent 1024 x 768 x 16. A vous d'essayer le meilleur
compromis.

- Plein écran
Normalement, COLOBOT occupe tout l'écran, quelle que soit la
résolution. Si vous enlevez la coche, COLOBOT tournera dans
une fenêtre fixe ayant approximativement 640 x 480 pixels.

- Appliquer les changements
Il faut cliquer ce bouton pour que les changements effectués
dans cette page prennent effet.


Options - Graphique
-------------------

- Ombres
Normalement, tous les objets (robots, bâtiments, titanium,
etc.) projettent une ombre sur le sol. Avec certaines cartes
graphiques anciennes, un carré gris peut apparaître, en plus
de l'ombre. Si cela vous semble inesthétique, supprimez cette
option.

- Marques sur le sol
Les marques accentuent les berges. Elles donnent aussi des
teintes différentes à certains endroits du terrain. Si cette
option est déclenchée, il n'est pas possible de montrer les
zones plates avec le cosmonaute.

- Salissures
Les salissures donnent un effet vieux et sale aux robots et aux
bâtiments.

- Ciel
Avec cette option, le ciel de certaines planètes contient des
nuages poussés par le vent. Sans cela, le ciel est généralement
rempli par un simple dégradé de couleurs.

- Rayons du soleil
Lorsque vous vous tournez en direction du soleil, un reflet
apparaît.

- Planètes et étoiles
Sur certaines planètes, vous voyez dans le ciel des planètes
proches qui bougent lentement.

- Brouillard
Cette option correspond aux nappes de brouillard horizontales
qui sont généralement très proches du sol.

- Lumières dynamiques
Les lumières dynamiques apparaissent lors d'explosions, ou
lorsqu'un robot refait le plein d'énergie.

- Quantité de particules (0% à 200%)
Les particules servent à simuler la poussière, la fumée, les
éclats, les bulles sous l'eau, etc.

- Profondeur de champ (50% à 200%)
La profondeur de champ détermine jusqu'où porte votre regard.
Cette profondeur est de toute façon très différente selon
l'atmosphère de la planète. Une grande valeur (par exemple
200%) permet de voir loin, mais nécessite une bonne carte
graphique 3D.

- Détails des objets (0% à 200%)
Lorsqu'un objet est au loin, il est représenté avec moins de
détails. Une grande valeur éloigne la distance à laquelle le
changement est effectué.

- Nombre d'objets décoratifs (0% à 100%)
Ce nombre détermine la quantité d'objets décoratifs présents,
tels que les plantes, les arbres, les cristaux, etc.


Options - Jeu
-------------

- Séquences cinématiques
Certaines missions commencent ou finissent par un petit film
montrant l'atterrissage ou le décollage du vaisseau. La touche
Esc permet toujours de stopper ces séquences. Si cette option
est supprimée, ces films sont complètement sautés.

- Défilement dans les bords
Lorsque la caméra est derrière le cosmonaute ou derrière un
robot, une rotation est effectuée si la souris s'approche du
bord de l'écran.

- Inversion souris X
Inverse le sens de la rotation lorsque la souris touche le bord
gauche ou le bord droite de l'écran.

- Inversion souris Y
Inverse le sens du mouvement lorsque la souris touche le bord
supérieur ou le bord inférieur de l'écran, dans l'éditeur de
programmes.

- Secousses lors d'explosions
Lors d'une explosion, ou lorsque vous effectuez un atterrissage
brusque, la caméra subit un choc qui se manifeste par une
secousse plus on moins prononcée. Supprimez cette option pour
que la caméra soit toujours parfaitement stable.

- Retour animé
Indique comment la situation est réinitialisée dans les exercices
de programmation et dans les défis.

- Bulles d'aide
Les bulles d'aide vous donnent un petit texte explicatif lorsque
la souris s'arrête sur un bouton ou un objet.

- Reflets sur les boutons
Les reflets sont visibles lorsque la souris survole un bouton.

- Particules dans l'interface
Pluie de particules lorsque la souris bouge dans les écrans
d'interface.

- Souris ombrée
La souris ombrée est gérée par COLOBOT. La souris normale est
dessinée par Windows. Lorsque COLOBOT ne fonctionne pas en mode
"plein écran", la souris est forcément normale.

- Indentation automatique
L'indentation déplace automatiquement le curseur vers la droite
lors de l'édition d'un programme, en fonction des accolades
{ et }.

- Grande indentation
Une grande indentation décale vers la droite d'une distance
égale à 4 espaces. Sinon, le décalage est de 2 espaces.


Options - Commandes
-------------------

- Flèches gauche, droite, haut et bas
Pour faire tourner, avancer ou reculer le cosmonaute ou un
robot. Dans les exercices de programmation, notez que les robots
ne peuvent pas être déplacés ainsi.

- Shirt et Ctrl
Pour faire monter ou descendre le cosmonaute ou un robot volant.
Sur certaines planètes, le vol est impossible.

- Entrée
Cette touche effectue l'action principale du robot sélectionné,
qui correspond au bouton avec un cadre rouge.

- Espace
Change le point de vue de la caméra. Pour la plupart des robots,
la caméra passe alternativement d'une vue arrière à une vue
intérieure.

- . (pavé numérique)
Met le jeu en pause et montre l'endroit correspondant au dernier
message affiché en haut de l'écran. Si plusieurs messages sont
affichés, une nouvelle pression montre le message précédent,
chronologiquement parlant. Esc enlève la pause et le jeu reprend
son cours.

- Tab
Sélectionne l'objet suivant, selon l'ordre des petites icônes
tout en haut de l'écran.

- Home
Sélectionne toujours rapidement le cosmonaute.

- 0 (pavé numérique)
Sélectionne le robot ou le bâtiment qui était sélectionné
précédemment.

- + et - (pavé numérique)
Approche ou éloigne la caméra de l'objet sélectionné.

- F1
Affiche les instructions sur la mission ou l'exercice à l'aide
du SatCom.

- F2
Affiche le glossaire sur la programmation à l'aide du SatCom.

- F3
Pendant l'édition d'un programme, cette touche affiche des
informations complémentaires sur l'instruction en cours de
frappe.

- F4, F5 et F6
Choix de la vitesse du jeu. Le mode normal x1 correspond à la
touche F4. Les modes rapides x1.5 et x2 doivent être utilisés
avec prudence, car les ennemis vont également plus vite !

- Esc
Quitte la mission en cours.


Options - Son
-------------

- Bruitages
Les bruitages sont générés par l'action en cours. Il s'agit de
bruits de moteur, de pas, d'explosions, etc.

- Fond sonore
Le fond sonore dépend de la planète. Il donne une ambiance
générale, indépendamment de l'action en cours. Chaque fond
sonore correspond à une piste audio sur le CD. Dans les
exercices, les défis ainsi que sur la lune, il n'y a pas de
fond sonore.

- Bruitages 3D
Certaines cartes son permettent de localiser un son dans
l'espace à l'aide de 4 haut-parleurs. Le réalisme est alors
superbe. Si votre carte son ne le permet pas, le bouton est
grisé.


Créér des exercices
-------------------

Tous les exercices sont dans le sous-dossier \scene\ :

	\scene\trainxyy.txt -> exercices
	\scene\defixyy.txt  -> défis
	\scene\scenexyy.txt -> missions
	\scene\freexyy.txt  -> jeux libres

Le numéro de 3 chiffres est composé de :

	x  -> numéro du chapitre (1..9)
	yy -> rang dans le chapitre (01..99)

Par exemple, train102.txt est le deuxième exercice du premier
chapitre.
Lorsque le rang dans le chapitre est 00, c'est qu'il s'agit de
la description du chapitre.
Les fichiers doivent avoir des numéros sucessifs. Supposons par
exemple que les fichiers suivants existent :

	train600.txt
	train601.txt
	train602.txt
	train605.txt

Le chapitre 6 ne contiendra dans ce cas que 2 exercices, les
numéros 01 et 02. Le numéro 05 n'apparaît pas dans la liste,
car il manque les numéros 03 et 04.

Description
-----------

Un fichier de description d'exercice détermine le relief du
terrain, les textures utilisées, la position initiale des
différents robots, matières premières, plantes, etc.



Couleur
-------

Les couleurs sont spécifiées à l'aide de 4 composantes
rouge/vert/bleu/alpha. Les valeurs sont comprises entre
0 (noir) et 255 (blanc). La composante alpha est généralement
nulle. Par exemple :

	color=175;209;215;0  // bleu-sable




Title.E text="Power Cell 1"
Nom court de l'exercice, tel qu'il apparaît dans la liste de
gauche.

Resume.E text="Instruct a bot to change the power cell of a nearby winged shooter."
Résumé de l'exercice, tel qu'il apparaît en dessous des deux
listes.

ScriptName.E text="Spider2"
Nom par défaut donné à un nouveau programme créé.

Instructions name="tcell1.txt"
Nom du fichier qui contient les instructions de l'exercice,
qui seront affichées dans le SatCom.
Le fichier ttit1.txt doit être placé dans le dossier help\.

HelpFile name="cbot.txt"
Non du fichier qui contient les instructions sur la program-
mation, affichées lorsque l'on presse sur F2.
Le fichier cbot.txt doit être placé dans le dossier help\.
Normalement, tous les exercices font référence aux mêmes
instructions générales contenues dans cbot.txt.

EndingFile win=2 lost=0
Scène à utiliser lorsque l'exercice est réussi ou raté.
win=2 signifie qu'il faut utiliser scene\win002.txt.
lost=0 signifie qu'il faut utiliser scene\lost000.txt.

Audio track=0
Numéro de la piste audio du CD à jouer pendant l'exercice.
Normalement, les exercices restent silencieux, en donnant le
numéro de piste 0. Si nécessaire, il est possible de donner
les numéros suivants :
	2: Terre
	3: Tropica
	4: Crystalium
	5: Saari
	6: Volcano
	7: Centaury
	8: Orphéon
	9: Terranova

AmbiantColor air=102;102;102;102 water=20;20;20;20
Couleur ambiante utilisée lorsqu'on est à l'air libre ou
sous l'eau.

FogColor air=180;222;255;0 water=10;20;100;0
Couleur que prennent les objets lorsqu'ils sont au loin.

VehicleColor color=175;209;215;0
Couleur des robots et des bâtiments.

DeepView air=100.00 water=25.00
Distance en mètres jusqu'où porte la vue. Au delà de cette
distance, plus rien n'est affiché.

FogStart air=0.1 water=0.1
Plus on s'approche de la distance maximale de vue (DeepView)
et plus la couleur des objets fusionne avec la couleur du
brouillard (FogColor), ce qui simule du brouillard. Une valeur
de 0.1 indique un brouillard qui commence proche du point de
vue, donc un brouillard dense. Une valeur de 0.9 indique un
brouillard très peu dense.

Par exemple :
	DeepView air=100.00
	FogStart air=0.2

Distances à partir de l'observateur :
0 à 20 mètres      -> affichage normal
20 à 100 mètres    -> affichage de plus en plus brouillardeux
100 mètres et plus -> plus rien n'est affiché

SecondTexture rank=3
Texture utilisée pour salir les robots et les bâtiments. Vous
pouvez utiliser une valeur comprise entre 1 et 8.

Background up=76;105;226;0 down=192;250;255;0
Couleurs du fond d'écran, si aucune texture n'est utilisée.
Un dégradé de couleur passe de "up" tout en haut de l'écran
progressivement jusqu'à "down" en milieu d'écran. La moitié
inférieure de l'écran prend la couleur unie "down". Cette
moitié inférieure n'est en principe jamais visible, puisqu'il
y a toujours une partie de terrain qui la recouvre.

FrontsizeName image="lens5.tga"
Nom de la texture d'avant-plan, qui contient un effet de
"lens flare", plus ou moins visible selon l'orientation.


TerrainRelief image="textures\relief41.bmp" factor=1.0
Le relief du terrain est décrit dans une image BMP à 256
niveaux de gris mesurant exactement 161 x 161 pixels.
La couleur blanche correspond à l'altitude la plus basse.
La couleur noire correspond à l'altitude la plus haute.
Normalement, on utilise "factor=1.0". Dans ce cas, les 256
niveaux permettent de s'élever de 64 mètres. Une différence
d'intensité de gris de 1 correspond donc à une différence
d'altitude de 0.25 mètres.

La coordonnée du pixel central 80;80 de l'image correspond
à la coordonnée 0;0 dans CoLoBoT.
La coordonnée 0;0 du pixel en haut à gauche dans l'image
correspond au point à l'extrème nord-ouest -400;400 dans CoLoBoT.
Un pixel dans l'image correspond à un carré au sol de 5x5
mètres dans CoLoBoT.

Vous pouvez dessiner de nouveaux reliefs avec un logiciel tel
que PaintShop, ou réutiliser les nombreux fichiers reliefxx.bmp
placés dans le dossier textures\.

TerrainResource image="textures\res00.bmp"
Cette image détermine la présence des ressources dans le
sous-sol. Il s'agit d'une image BMP en 256 couleurs de
161 x 161 pixels.

Rouge = 255;0;0   (index=5)  -> titanium
Vert  = 0;255;0   (index=30) -> énergie
Jaune = 255;255;0 (index=35) -> uranium

Toutes les autres couleurs ou niveaux de gris sont ignorés.

Généralement, un bon truc pour placer les zones de couleur au
bon endroit est de partir de l'image à niveaux de gris du
relief et de la convertir en 256 couleurs.

TerrainWater level=7.5 ...
Cette commande contient plusieurs paramètres, dont seul "level"
nous intéresse ici. "level" indique donc le niveau de l'eau ou
de la lave, par-rapport au niveau zéro qui correspond à la
couleur blanche dans l'image du relief (TerrainResource).
L'altitude des robots est par la suite toujours calculée par-
rapport au niveau de la mer (level). Une altitude négative
indiquera donc que le robot est sous l'eau.

BeginObject
Cette commande doit précéder le premier CreateObject.

CreateObject pos=7;-10 dir=1.5 type=Me
Création d'un objet dans l'exercice. Il peut s'agir d'un robot,
d'un bâtiment, d'une matière première, d'une plante, etc.

Pour déterminer la position d'un objet, un bon moyen consiste
à déplacer le cosmonaute à l'endroit souhaité, puis de taper
les commandes :

    Ctrl+Pause showstat Entrée
    Ctrl+Pause showpos Entrée

La partie inférieure de l'écran indique alors les coordonnées
de l'objet sélectionné, qu'il n'y a plus qu'à reporter dans le
fichier de description de l'exercice.

La direction est un nombre compris entre 0 et 2.
	0.0 -> est
	0.5 -> sud
	1.0 -> ouest
	1.5 -> nord
Le sens de rotation est donc horaire.

Les différents types possibles pour les objets sont :

Base :
	type=Me // cosmonaute
	type=SpaceShip

Robots :
	type=PracticeBot // robot d'entraînement
	type=TargetBot // robot cible

	type=WheeledGrabber
	type=TrackedGrabber
	type=WingedGrabber
	type=LeggedGrabber

	type=WheeledShooter
	type=TrackedShooter
	type=WingedShooter
	type=LeggedShooter

	type=WheeledOrgaShooter
	type=TrackedOrgaShooter
	type=WingedOrgaShooter
	type=LeggedOrgaShooter

	type=WheeledSniffer
	type=TrackedSniffer
	type=WingedSniffer
	type=LeggedSniffer

	type=Thumper
	type=PhazerShooter
	type=Recycler
	type=Shielder
	type=Subber

Bâtiments :
	type=Derrick
	type=BotFactory
	type=PowerStation
	type=Converter
	type=RepairCenter
	type=DefenseTower
	type=AlienNest
	type=ResearchCenter
	type=RadarStation
	type=ExchangePost
	type=PowerPlant
	type=AutoLab
	type=NuclearPlant
	type=PowerCaptor
	type=Vault
	type=StartArea
	type=GoalArea
	type=Target1 // pour l'entraînement au vol
	type=Target2
	type=Houston // centre de contrôle

Objets transportables :
	type=TitaniumOre
	type=UraniumOre
	type=Titanium
	type=PowerCell
	type=NuclearCell
	type=OrgaMatter
	type=BlackBox // boîte noire
	type=KeyA..D
	type=TNT // caisse d'explosif

Plantes et décors :
	type=Greenery0..4 // plante standard basse
	type=Greenery5..7 // petit trèfle bas
	type=Greenery10..14 // plante grasse montante
	type=Greenery15..19 // fougère
	type=Tree0..3 // arbre haut
	type=Mushroom1 // champignon inoffensif
	type=Mushroom2 // champignon corrosif
	type=MegaStalk0..5 // plante étrange

	type=Quartz0..3 // quartz petit..grand
	type=Barrier0  // barrière courte
	type=Barrier1  // barrière longue
	type=ApolloLEM // sur la lune uniquement :
	type=ApolloJeep
	type=ApolloFlag
	type=ApolloModule
	type=ApolloAntenna

Epaves de robots recyclables :
	type=WreckBotw1..2 // robot à roues
	type=WreckBott1..2 // robot à petites chenilles
	type=WreckBotr1..2 // robot à grosses chenilles

Bâtiments en ruine :
	type=RuinBotFactory
	type=RuinDoor // porte de convertisseur
	type=RuinSupport // support de radar
	type=RuinRadar // socle de radar
	type=RuinConvert
	type=RuinBaseCamp // socle du vaisseau spatial
	type=RuinHeadCamp // coiffe du vaisseau spatial

Ennemis :
	type=AlienQueen
	type=AlienEgg
	type=AlienAnt
	type=AlienSpider
	type=AlienWasp
	type=AlienWorm

Indicateurs :
	type=PowerSpot // indique la présence d'énergie en sous-sol
	type=TitaniumSpot // indique la présence de titanium en sous-sol
	type=UraniumSpot // indique la présence d'uranium en sous-sol
	type=KeyA..DSpot // indique la présence de clé en sous-sol
	type=WayPoint // croix pour les exercices
	type=BlueFlag
	type=RedFlag
	type=GreenFlag
	type=YellowFlag
	type=VioletFlag

Divers :	
	type=Mine // bombe fixe à éviter
	type=Portico // portique géant (sur la terre)
	type=Bag // sac de survie
	type=Home // petite maison sympa (sur terranova)
	type=Tech // technicien de Houston
	type=Firework // feu d'artifice

La commande CreateObject peut contenir des paramètres
supplémentaires :

CreateObject ... script1="ttit1.txt"
Nom du programme CBOT à charger à la position 1 dans le robot
ou l'insecte. Il est possible de charger jusqu'à 10 programmes
en utilisant les commandes script1 à script10.
Les fichiers .txt des programmes doivent être placés dans le
dossier script\.

CreateObject ... run=1
Numéro du programme à exécuter directement lorsque l'exercice
démarre. Cela peut être utile, par exemple, pour un robot
TargetBot que l'élève devra suivre.
Si plusieurs programmes sont chargés (avec script1, script2,
etc.), un seul pourra être exécuté, bien entendu.

EnableResearch type=WINGER
Liste des recherches déjà effectuées.

DoneResearch type=WINGER
Liste des recherches qu'il est autorisé de faire, en construisant
un centre de recherche (ResearchCenter) ou un laboratoire (AutoLab).


	TRACKER Robots Tracked*
	WINGER Robots Winged*
	THUMPER Robots Thumper
	SHOOTER Robots *Shooter
	TOWER Bâtiment DefenseTower
	PHAZER Robots PhazerShooter
	SHIELDER Robots Shielder
	ATOMIC Bâtiment NuclearPlant

	iPAW Robots Legged*
	iGUN Robots *OrgaShooter

	RECYCLER Robots recycleurs
	SUBBER Robots Subber
	SNIFFER Robots *Sniffer


EndMissionTake pos=0.00;0.00 dist=25000.00 type=Me lost=0
EndMissionTake pos=0.00;0.00 dist=25000.00 type=WheeledGrabber lost=0
EndMissionTake pos=0.00;0.00 dist=1000.00 type=Titanium min=1 max=1
Critères pour déterminer à quel moment l'exercice est terminé.




Dossiers et réseau
------------------

Dans une utilisation en réseau, COLOBOT doit être installé
sur chaque machine individuellement. Après cette opération,
les exercices et les missions sont chargés localement,
généralement dans le dossier :

	C:\Program Files\Colobot\scene\

Si vous avez créé des exercices spécifiques, il peut être
utile de les charger à partir d'un dossier central commun à
tous les ordinateurs. Pour cela, il faut modifier le fichier

	C:\Program Files\Colobot\colobot.ini

sur chaque machine. La section suivante permet de donner le
chemin d'accès :

	[Directory]
	scene=scene

Ici, il s'agit d'un chemin d'accès relatif. Vous pouvez par
exemple le changer en un chemin absolu sur un serveur :

	[Directory]
	scene=\\Serveur\c\colobot\scene\

De la même façon, vous pouvez changer le dossier dans lequel
sont placés les programmes lorsque vous utilisez la commande
ouvrir/enregistrer avec le mode "public", dans l'éditeur de
programmes :

	[Directory]
	public=program

En donnant un chemin d'accès commun à tous les ordinateurs, il
sera possible d'échanger des programmes :

	[Directory]
	public=\\Serveur\c\colobot\program\



Réglages
--------

Pour afficher le nombre d'images par seconde, il faut appuyer
sur Ctrl+Pause puis taper la commande "showstat" et valider
avec la touche Entrée :

    Ctrl+Pause showstat Entrée

La partie supérieure de l'écran affiche alors, par exemple :

    32.46 fps T=11558 (640x480x16)

Le premier chiffre correspond au nombre d'images par seconde
(fps = frame per second).
Le deuxième chiffre indique le nombre de triangles affiché dans
la scène.
Les 3 derniers chiffres entre parenthèses sont la résolution
(largeur x hauteur) et le nombre de bits pour les couleurs.

Tous les réglages sont mémorisés dans le fichier colobot.ini,
présent dans le dossier principal où COLOBOT a été installé.
Ce fichier peut être modifié (avec prudence et après en avoir
fait une copie) avec un éditeur de texte, comme par exemple le
bloc-notes de Windows.


Problèmes
---------

Pour résoudre certains problèmes, il est possible de modifier
le fichier colobot.ini avec un éditeur de texte (par exemple
avec le bloc-notes de Windows). N'ajoutez pas de nouvelles
lignes, mais modifiez simplement les valeurs existantes.
Attention à ne pas insérer d'espace. Il faut quitter COLOBOT
avant de modifier le fichier.

Si la végétation s'affiche mal, ou même pas du tout, vous
avez peut-être mis à zéro le nombre d'objets décoratifs dans
les options. Pour remettre 100% :
	[Setup]
	GadgetQuantity=1.00
Si la végétation ne s'affiche toujours pas, essayez :
	[Engine]
	AlphaMode=0
ou
	[Engine]
	AlphaMode=2

Si un carré apparaît autour des ombres, essayez :
	[Engine]
	WhiteSrcBlend=9
	WhiteDestBlend=6
ou
	[Engine]
	WhiteSrcBlend=6
	WhiteDestBlend=3
Si cela ne fonctionne pas, il faut supprimer les ombres :
	[Engine]
	WhiteSrcBlend=0
	WhiteDestBlend=0
	[Setup]
	GroundShadow=0

Lorsque un objet s'interpose entre l'objet sélectionné et la
caméra, il devient transparent. Si l'objet n'est pas assez
transparent, essayez :
	[Engine]
	StateColor=0
ou
	[Engine]
	StateColor=1


Equipe de développement
-----------------------

- Daniel Roux
- Denis Dumoulin
- Otto Kölbl
- Michael Walz
- Didier Gertsch

Beta testeurs
-------------

- Adrien Roux
- Didier Raboud
- Nicolas Beuchat
- Joël Roux
- Michael Jubin
- Daniel Sauthier
- Nicolas Stubi
- Patrick Thévoz

Copyright
---------

La photo de la nébuleuse NGC3603 servant de fond pour la planète
Orphéon a été prise avec le télescope spatial Hubble. Elle est
utilisée avec l'autorisation des auteurs Wolfgang Brandner
(JPL/IPAC), Eva K. Grebel (Université de Washington), You-Hua Chu
(Université d'Illinois Urbana-Champaign) et de la NASA.

Le son de tonnerre de la planète Orphéon est utilisé avec
l'autorisation limitée de CREATIVE moyennant la mention :
Material from products are used by limited permission from CREATIVE.

Développeur
-----------

EPSITEC SA
Mouette 5
CH-1092 Belmont

colobot@epsitec.ch
www.colobot.com

Editeur de la version française
-------------------------------

ALSYD
43, Ch. du vieux Chêne
F-38240 Meylan

www.alsyd.com
